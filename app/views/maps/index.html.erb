
<div id="map"></div>


<!-- <input type="file" id="files" name="files[]" multiple /> -->
<output id="list"></output>


<div id="drop_zone">Drop files here</div>
<output id="list"></output>

<script>

   function getColor(d) {
    return d > 1000 ? '#800026' :
           d > 500  ? '#BD0026' :
           d > 200  ? '#E31A1C' :
           d > 100  ? '#FC4E2A' :
           d > 50   ? '#FD8D3C' :
           d > 20   ? '#FEB24C' :
           d > 10   ? '#FED976' :
                      '#FFEDA0';
}

function style(feature) {
    return {
        fillColor: getColor(feature.properties.density),
        weight: 2,
        opacity: 1,
        color: 'white',
        dashArray: '3',
        fillOpacity: 0.7
    };
}

function highlightFeature(e) {
    var layer = e.target;

    layer.setStyle({
        weight: 5,
        color: '#666',
        dashArray: '',
        fillOpacity: 0.7
    });

    if (!L.Browser.ie && !L.Browser.opera) {
        layer.bringToFront();
    }
}

function resetHighlight(e) {
    geojson.resetStyle(e.target);
}


  function handleFileSelect(evt) {
    evt.stopPropagation();
    evt.preventDefault();

    var files = evt.dataTransfer.files; // FileList object.

    // files is a FileList of File objects. List some properties.
    var output = [];
    for (var i = 0, f; f = files[i]; i++) {


    	var reader = new FileReader();

					reader.onload = function(event) {
					    var contents = event.target.result;
					    // console.dir(contents);
					    // contents = contents.split('Employee ID,Geo Hash')[1];
					    // console.log(contents.split(','));

					    var array = CSVToArray(contents) ;
					    for (var i=1; i< array.length;i++){
					    	
					    	var geohash = array[i][1];
					    	var employeeId = array[i][0];
					    	var latlong = decodeGeoHash(geohash) ;
									// L.marker( new L.LatLng(decodeGeoHash(array[i]).latitude[0],decodeGeoHash(array[i]).longitude[0] ).addTo(map);
										// console.log(decodeGeoHash(array[i]).longitude[0])
										marker = L.marker( new L.LatLng(latlong.latitude[0], latlong.longitude[0])).addTo(map);
										marker.bindPopup("<b>"+employeeId+"</b>").openPopup();
										// console.log(" latitude: "+ latlong.latitude +" longitude: "+latlong.longitude );
										// console.dir(map);
										  // console.dir(geohash);
					    }



					};

					reader.onerror = function(event) {
					    console.error("File could not be read! Code " + event.target.error.code);
					};

    	reader.readAsText(f,'UTF-8');

				 	// pretty output   	
      output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
                  f.size, ' bytes, last modified: ',
                  f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                  '</li>');
    }

    document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';
  }

  function handleDragOver(evt) {
    evt.stopPropagation();
    evt.preventDefault();
    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
  }

  // Setup the dnd listeners.
  var dropZone = document.getElementById('drop_zone');
  dropZone.addEventListener('dragover', handleDragOver, false);
  dropZone.addEventListener('drop', handleFileSelect, false);
</script>